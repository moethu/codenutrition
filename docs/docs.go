// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-01-21 10:37:37.574145689 +0100 CET m=+0.101784039

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "renders form to generate code string",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "renders form to generate code string",
                "produces": [
                    "text/html"
                ],
                "summary": "renders form",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "html"
                        }
                    }
                }
            }
        },
        "/badge/{code}": {
            "get": {
                "description": "renders badge image as png from code parameter string",
                "produces": [
                    "image/png"
                ],
                "summary": "renders badge image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code String",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/facts/{code}": {
            "get": {
                "description": "renders facts page using code parameter string",
                "produces": [
                    "text/html"
                ],
                "summary": "renders facts page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code String",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "html"
                        }
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
